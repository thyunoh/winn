<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.wnn_medcost.tong.mapper.TongMapper">
    <!-- 기간별 건수와 진료비 추이  '6' 건강에서는 약국처방조제/ 산재한방통원-->
	<select  id="tong00List" parameterType="TongDTO" resultType="TongDTO"><![CDATA[
	 	SELECT 
		    A.HOSP_CD ,
		    A.DATE_YM        AS dateYm,
		    COUNT(*)         AS totalCount,
		    SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
			                                                     + IFNULL(B.VET_AMT,0))              AS totalAmt,
		    TRUNCATE(SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.VET_AMT,0) 
			                                   + IFNULL(B.NON100_CLAIM,0)) /COUNT(*), 0)             AS totalAvgAmt,
		    SUM(CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') THEN 1 ELSE 0 END)                AS ipCount,
		    SUM(CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') THEN 
                        IFNULL(B.CLAIM_AMT,0 + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
		                                       + IFNULL(B.VET_AMT,0)) ELSE 0 END)                    AS ipAmt,
			COALESCE(
			    TRUNCATE(
			        SUM(CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') THEN 
			              IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
							                    + IFNULL(B.VET_AMT,0) ELSE 0 END) /
			        NULLIF(SUM(CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') THEN 1 ELSE 0 END), 0),
			    0),
			0)                                                                                        AS ipAvgAmt ,
		    SUM(CASE WHEN A.TREAT_TYPE IN('2','4','9','H','6') THEN 1 ELSE 0 END)                     AS opCount,
		    SUM(CASE WHEN A.TREAT_TYPE IN('2','4','9','H','6') THEN 
		                  IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
								                + IFNULL(B.VET_AMT,0) ELSE 0 END)                     AS opAmt,
			COALESCE(
			    TRUNCATE(
			        SUM(CASE WHEN A.TREAT_TYPE IN('2','4','9','H','6') THEN 
			              IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0)
							                    + IFNULL(B.VET_AMT,0)  ELSE 0 END) /
			        NULLIF(SUM(CASE WHEN A.TREAT_TYPE IN('2','4','9','H','6') THEN 1 ELSE 0 END), 0),
			    0), 
			0)                                                                                        AS opAvgAmt
		FROM  TBL_CHUNG_MST A
		 JOIN TBL_MYOUNG_MST B ON A.CLAIM_NO  = B.CLAIM_NO
		                      AND A.HOSP_CD   = B.HOSP_CD   
		WHERE 1=1
		   AND A.HOSP_CD = #{hospCd}  
	    ]]>	  
		<if test="startMonth != null and startMonth != ''">
		    AND A.DATE_YM &gt;= #{startMonth}
		</if>
		<if test="endMonth != null and endMonth != ''">
		    AND A.DATE_YM &lt;= #{endMonth}
		</if>
		<if test="medType == '1' "> <!-- 의과 -->
		    AND ( A.MED_TYPE IN('1' ,'5') OR (A.CFORM_NO = 'M110' AND A.TREAT_TYPE IN('1','2') ) )
		</if>
		<if test="medType == '2' "> <!-- 치과 -->
		    AND ( A.MED_TYPE IN('2') OR (A.CFORM_NO = 'M110' AND A.TREAT_TYPE IN('3','4') ) )
		</if>
		<if test="medType == '3' "> <!-- 한방 -->
		    AND ( A.MED_TYPE IN('9') OR (A.CFORM_NO = 'M110' AND A.TREAT_TYPE IN('5','6') ) )
		</if>
		<![CDATA[
		GROUP BY A.HOSP_CD , A.DATE_YM
		ORDER BY A.HOSP_CD , A.DATE_YM
	    ]]>	
	</select>   
	<!-- 주요진료지표  -->    
    <select  id="tong01List" parameterType="TongDTO" resultType="TongDTO"><![CDATA[
		SELECT 
		    curr.dateYm,
		    curr.totalAmt AS allCostCurr,
		    prev.totalAmt AS allCostPrev,
		    CASE 
		        WHEN prev.totalAmt IS NULL OR prev.totalAmt = 0 THEN 0
		        ELSE FLOOR((curr.totalAmt / prev.totalAmt) * 100)
		    END AS allCostRate ,
		    
		    curr.claimCount as allCasesCurr ,
		    prev.claimCount as allCasesPrev ,
            CASE 
		        WHEN prev.claimCount IS NULL OR prev.claimCount = 0 THEN 0
		        ELSE FLOOR((curr.claimCount / prev.claimCount) * 100)
		    END AS allCasesRate ,
		    curr.ipCount as iCasesCurr ,
		    prev.ipCount as iCasesPrev ,
            CASE 
		        WHEN prev.ipCount IS NULL OR prev.ipCount = 0 THEN 0
		        ELSE FLOOR((curr.ipCount / prev.ipCount) * 100)
		    END AS iCasesRate ,  
		    curr.ipTotAmt as iCostCurr ,
		    prev.ipTotAmt as iCostPrev ,
            CASE 
		        WHEN prev.ipTotAmt IS NULL OR prev.ipTotAmt = 0 THEN 0
		        ELSE FLOOR((curr.ipTotAmt / prev.ipTotAmt) * 100)
		    END AS iCostRate , 
		    curr.iuniqPatients as iuniqPatiCurr,
            prev.iuniqPatients as iuniqPatiPrev ,
            curr.opCount       as oCasesCurr  , 
            prev.opCount       as oCasesPrev  ,
            curr.opTotAmt      as oCostCurr, 
            prev.opTotAmt      as oCostPrev,
            curr.first_jin     as oFirstCasesCurr, 
            prev.first_jin     as oFirstCasesPrev,
            curr.return_jin    as oReturnCasesCurr, 
            prev.return_jin    as oReturnCasesPrev
		FROM (
		    SELECT A.DATE_YM                                                                                              AS dateYm,
		           SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) + IFNULL(B.VET_AMT,0)) AS totalAmt ,
		           COUNT(*)                                                                                               AS claimCount ,
		           SUM(CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') THEN 1 ELSE 0 END)                              AS ipCount ,
                   SUM(CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') 
                                    THEN (IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
                                                                                           + IFNULL(B.VET_AMT,0)) 
                   ELSE 0 END)                                                                                            AS ipTotAmt	,
                   COUNT(DISTINCT CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') THEN B.PAT_ID END)                   AS iuniqPatients,		           
                   SUM(CASE WHEN A.TREAT_TYPE IN('2','4','9','H','6') THEN 1 ELSE 0 END)                                  AS opCount ,
                   SUM(CASE WHEN A.TREAT_TYPE IN('2','4','9','H','6') 
                            THEN (IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
                                                                                   + IFNULL(B.VET_AMT,0)) 
                   ELSE 0 END)                                                                                           AS opTotAmt ,
			       SUM( CASE A.TREAT_TYPE IN('2','4','9','H','6') WHEN ( 
			                SELECT MIN(CODE_NO) FROM TBL_JINORD_MST C
			                WHERE C.ITEM_NO = '01'          AND C.HOSP_CD = B.HOSP_CD 
			                  AND C.CLAIM_NO = B.CLAIM_NO   AND C.BILL_SEQ = B.BILL_SEQ
			            ) = '01' THEN 1
			            ELSE 0  END
			       )                                                                                                     AS first_jin,
			       SUM(CASE A.TREAT_TYPE IN('2','4','9','H','6') WHEN (
			                SELECT MIN(CODE_NO) FROM TBL_JINORD_MST C
			                WHERE C.ITEM_NO = '01'          AND C.HOSP_CD  = B.HOSP_CD 
			                  AND C.CLAIM_NO = B.CLAIM_NO   AND C.BILL_SEQ = B.BILL_SEQ
			            ) <> '01' OR (
			                SELECT MIN(CODE_NO)  FROM TBL_JINORD_MST C
			                WHERE C.ITEM_NO = '01'          AND C.HOSP_CD  = B.HOSP_CD 
			                  AND C.CLAIM_NO = B.CLAIM_NO   AND C.BILL_SEQ = B.BILL_SEQ
			            ) IS NULL THEN 1
			            ELSE 0  END
			      )                                                                                                     AS return_jin                    
		    FROM TBL_CHUNG_MST A
		    JOIN TBL_MYOUNG_MST B ON A.CLAIM_NO = B.CLAIM_NO
		                         AND A.HOSP_CD  = B.HOSP_CD  
		    WHERE   A.HOSP_CD = #{hospCd}  
		       AND  A.DATE_YM = #{endMonth} 
		    GROUP BY A.DATE_YM
		) curr
		LEFT JOIN (
		    SELECT A.DATE_YM                                                                       AS dateYm,
		           SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
		                                                                + IFNULL(B.VET_AMT,0))     AS totalAmt ,
		           COUNT(*)                                                                        AS claimCount ,
		           SUM(CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') THEN 1 ELSE 0 END)       AS ipCount ,
                   SUM(CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') 
                                    THEN  (IFNULL(B.CLAIM_AMT,0)   + IFNULL(B.DISABLED_AMT,0) 
                                        + IFNULL(B.NON100_CLAIM,0) + IFNULL(B.VET_AMT,0)) 
                   ELSE 0 END)                                                                             AS ipTotAmt	,
                  COUNT(DISTINCT CASE WHEN A.TREAT_TYPE NOT IN('2','4','9','H','6') THEN B.PAT_ID END)     AS iuniqPatients  ,
                  SUM(CASE WHEN A.TREAT_TYPE IN('2','4','9','H','6') THEN 1 ELSE 0 END)                    AS opCount ,
                  SUM(CASE WHEN A.TREAT_TYPE IN('2','4','9','H','6') 
                                    THEN (IFNULL(B.CLAIM_AMT,0)     + IFNULL(B.DISABLED_AMT,0) 
                                        + IFNULL(B.NON100_CLAIM,0)  + IFNULL(B.VET_AMT,0)) 
                  ELSE 0 END)                                                                      AS opTotAmt,
			      SUM( CASE A.TREAT_TYPE IN('2','4','9','H','6') WHEN (
			                SELECT MIN(CODE_NO)  FROM TBL_JINORD_MST C
			                WHERE C.ITEM_NO = '01'          AND C.HOSP_CD = B.HOSP_CD 
			                  AND C.CLAIM_NO = B.CLAIM_NO   AND C.BILL_SEQ = B.BILL_SEQ
			            ) = '01' THEN 1
			            ELSE 0  END
			       )                                                                               AS first_jin,
			       SUM(CASE A.TREAT_TYPE IN('2','4','9','H','6') WHEN (
			                SELECT MIN(CODE_NO)  FROM TBL_JINORD_MST C
			                WHERE C.ITEM_NO = '01'          AND C.HOSP_CD  = B.HOSP_CD 
			                  AND C.CLAIM_NO = B.CLAIM_NO   AND C.BILL_SEQ = B.BILL_SEQ
			            ) <> '01' OR (
			                SELECT MIN(CODE_NO)  FROM TBL_JINORD_MST C
			                WHERE C.ITEM_NO = '01'          AND C.HOSP_CD  = B.HOSP_CD 
			                  AND C.CLAIM_NO = B.CLAIM_NO   AND C.BILL_SEQ = B.BILL_SEQ
			            ) IS NULL THEN 1
			            ELSE 0  END
			      )                                                                                AS return_jin               	                         
		    FROM TBL_CHUNG_MST A
		    JOIN TBL_MYOUNG_MST B ON A.CLAIM_NO = B.CLAIM_NO
		                         AND A.HOSP_CD  = B.HOSP_CD  
		    WHERE  A.HOSP_CD = #{hospCd}
		      AND  A.DATE_YM = DATE_FORMAT(DATE_SUB(STR_TO_DATE(CONCAT(#{endMonth}, '01'), '%Y%m%d'),INTERVAL 1 MONTH),'%Y%m')
		    GROUP BY A.DATE_YM
		) prev
		ON prev.dateYm = DATE_FORMAT(DATE_SUB(STR_TO_DATE(CONCAT(curr.dateYm, '01'), '%Y%m%d'),INTERVAL 1 MONTH),'%Y%m')
    ]]>
    </select>  
    <!-- 총진료비 과별 건수당 진료비  -->
	<select id="tong02List" parameterType="TongDTO" resultType="TongDTO">
	<![CDATA[
		WITH BASE_DATA AS (
		    SELECT  
		        IFNULL(C.MED_FIELD, B.MED_TYPE) AS MED_FIELD,  
		        SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) + IFNULL(B.VET_AMT,0)) AS totalAmt,
		        COUNT(*)                                                                                               AS claimCount
		    FROM TBL_CHUNG_MST A
		    JOIN TBL_MYOUNG_MST B 
		      ON  A.CLAIM_NO = B.CLAIM_NO 
		      AND A.HOSP_CD  = B.HOSP_CD
		    LEFT JOIN TBL_DISEASE_MST C 
		      ON C.CLAIM_NO  = B.CLAIM_NO 
		     AND C.HOSP_CD   = B.HOSP_CD 
		     AND C.BILL_SEQ  = B.BILL_SEQ 
		     AND C.DIAG_TYPE = '1'
		    WHERE A.HOSP_CD  = #{hospCd}
		      AND A.DATE_YM BETWEEN #{startMonth} AND #{endMonth}
		]]>
		<choose>
		  <when test='ipwe == "I"'>
		    AND A.TREAT_TYPE NOT IN ('2','4','9','H','6')
		  </when>
		  <otherwise>
		    AND A.TREAT_TYPE IN ('2','4','9','H','6')
		  </otherwise>
		</choose>
		<![CDATA[
		    GROUP BY MED_FIELD
		),
		TOTAL_SUM AS (
		    SELECT SUM(totalAmt) AS totalAmt FROM BASE_DATA
		),
		BASE_WITH_TOTAL AS (
		    SELECT * FROM BASE_DATA
		    UNION ALL
		    SELECT '00' AS MED_FIELD, SUM(totalAmt), SUM(claimCount) FROM BASE_DATA
		)
		SELECT 
		    A.MED_FIELD AS MED_DEPT,  
		    COALESCE(D.SUB_CODE_NM, '전체') AS MED_NAME,
		    A.totalAmt,
		    A.claimCount,
		    FLOOR( A.totalAmt / A.claimCount) AS avgAmt,
		    ROUND((A.totalAmt / T.totalAmt) * 100, 1) AS percentOfTotal 
		FROM BASE_WITH_TOTAL A
		JOIN TOTAL_SUM T ON 1=1
		LEFT JOIN TBL_CODE_DTL D 
		  ON D.CODE_GB    = 'Z' 
		 AND D.CODE_CD    = 'MED_DEPT'
		 AND D.ACTION_YN  = 'Y'
		 AND D.SUB_CODE   = A.MED_FIELD
		ORDER BY percentOfTotal DESC, A.MED_FIELD
	]]>

	</select>
    <!-- 처치항목별 건당진료비와 구성비  -->
	<select id="tong03List" parameterType="TongDTO" resultType="TongDTO">
	  <![CDATA[
		SELECT ITEM_NO,  CODE_NO,
		    CASE WHEN ITEM_NO = '00' THEN '전체'
		    ELSE (
		          SELECT SUB_CODE_NM 
		          FROM TBL_CODE_DTL 
		          WHERE CODE_GB   = 'YD' 
		            AND CODE_CD   = 'ITEM_NO'
					AND ACTION_YN = 'Y' 
		            AND SUB_CODE  = TRIM(ITEM_NO)
		     )
		    END AS ITEM_NAME,
		    CASE WHEN ITEM_NO = '00' THEN '전체'
		        ELSE (
		            COALESCE(
		                (SELECT SUB_CODE_NM 
		                 FROM TBL_CODE_DTL 
		                 WHERE CODE_GB = 'Y' 
		                   AND CODE_CD = 'CODE_NO' 
		                   AND ACTION_YN = 'Y' 
		                   AND SUB_CODE = CONCAT(TRIM(ITEM_NO), CODE_NO)
		                 LIMIT 1),
		                (SELECT SUB_CODE_NM 
		                 FROM TBL_CODE_DTL 
		                 WHERE CODE_GB = 'H' 
		                   AND CODE_CD = 'CODE_NO'
								 AND ACTION_YN = 'Y'  
		                   AND SUB_CODE = CONCAT(TRIM(ITEM_NO), CODE_NO)
		                 LIMIT 1)
		            )
		        )
		    END                                                             AS CODE_NAME,
		    totalAmt   ,
		    claimCount ,
		    FLOOR(totalAmt / claimCount)                                    AS avgAmt,
		    ROUND((totalAmt / SUM(CASE WHEN ITEM_NO != '00' AND CODE_NO != '00' 
			                   THEN totalAmt ELSE 0 END) OVER ()) * 100, 1) AS percentOfTotal
		FROM (
		    SELECT  
		        IF(GROUPING(C.ITEM_NO), '00', IFNULL(C.ITEM_NO, '99')) AS ITEM_NO,
		        IF(GROUPING(C.CODE_NO), '00', C.CODE_NO)               AS CODE_NO,
		        SUM(CASE WHEN (C.CODE_TYPE IN ('1','A') AND SM.FEE_CODE IS NOT NULL) THEN 
		                    IFNULL(C.AMOUNT,0) * (
		                        CASE 
		                            WHEN E.HOS_GRD = '1' THEN IFNULL(D.PROP_1, 0) / 100
		                            WHEN E.HOS_GRD = '2' THEN IFNULL(D.PROP_2, 0) / 100
		                            WHEN E.HOS_GRD = '3' THEN IFNULL(D.PROP_3, 0) / 100
		                            ELSE IFNULL(D.PROP_3, 0) / 100
		                        END
		                    )
		                ELSE 0
		            END + IFNULL(C.AMOUNT,0)
		        )                                                      AS totalAmt,
		        COUNT(*)                                               AS claimCount
		    FROM TBL_CHUNG_MST A
			    JOIN TBL_MYOUNG_MST B 
			      ON A.CLAIM_NO = B.CLAIM_NO 
			     AND A.HOSP_CD  = B.HOSP_CD
			    LEFT JOIN TBL_JINORD_MST C 
			      ON C.CLAIM_NO = B.CLAIM_NO 
			     AND C.HOSP_CD  = B.HOSP_CD 
			     AND C.BILL_SEQ = B.BILL_SEQ 
			     AND ((C.ITEM_NO = 'L' AND C.CODE_NO = '01') OR (C.ITEM_NO <> 'L'))
			    LEFT JOIN WNN.TBL_CODE_DTL D 
			      ON D.CODE_GB   = 'Z' 
			     AND D.ACTION_YN = 'Y'
			     AND D.CODE_CD   = 'CFORM_NO' 
			     AND D.SUB_CODE  = A.CFORM_NO 
			    LEFT JOIN WNN.TBL_HOSP_MST E 
			      ON E.HOSP_CD   = A.HOSP_CD 
			     AND E.ACTION_YN = 'Y' 			   	
			    LEFT JOIN (SELECT FEE_CODE, MAX(START_DT) AS MAX_START_DT
			        FROM WNN.TBL_SUGA_MST
			        WHERE FEE_TYPE = '1'
			          AND DIV_TYPE = '2'
			        GROUP BY FEE_CODE
		    ) SM 
		      ON SM.FEE_CODE = C.EDI_CODE
		     AND SM.MAX_START_DT <= CONCAT(A.DATE_YM, '01')
		    WHERE A.HOSP_CD       = #{hospCd}
		      AND A.DATE_YM BETWEEN #{startMonth} AND #{endMonth}
		  ]]>
	  <choose>
	    <when test='ipwe == "I"'>
	      <![CDATA[
	        AND A.TREAT_TYPE NOT IN ('2','4','9','H','6')
	      ]]>
	    </when>
	    <otherwise>
	      <![CDATA[
	        AND A.TREAT_TYPE IN ('2','4','9','H','6')
	      ]]>
	    </otherwise>
	  </choose>
	  <![CDATA[
	      GROUP BY C.ITEM_NO, C.CODE_NO WITH ROLLUP
		) X
		WHERE NOT (ITEM_NO != '00' AND CODE_NO = '00')
		ORDER BY percentOfTotal DESC, ITEM_NO, CODE_NO
	  ]]>
	</select>
 	<select id="tong04List" parameterType="TongDTO" resultType="TongDTO">     
 	<![CDATA[
		 WITH TOTAL_SUMMARY AS (
		    SELECT 
		        SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
		                                                             + IFNULL(B.VET_AMT,0)) AS total_amt_all,
		        COUNT(*)                                                                    AS total_claims_all
		    FROM TBL_CHUNG_MST A
		    JOIN TBL_MYOUNG_MST B 
		      ON A.CLAIM_NO = B.CLAIM_NO AND A.HOSP_CD = B.HOSP_CD
		WHERE A.HOSP_CD = #{hospCd}
          AND A.DATE_YM BETWEEN #{startMonth} AND #{endMonth}
       ]]>
       <choose>
	    <when test='ipwe == "I"'>
	      <![CDATA[
	        AND A.TREAT_TYPE NOT IN ('2','4','9','H','6')
	      ]]>
	    </when>
	    <otherwise>
	      <![CDATA[
	        AND A.TREAT_TYPE IN ('2','4','9','H','6')
	      ]]>
	    </otherwise>
	  </choose> 
	  <![CDATA[
		)
	  ]]>
	  <![CDATA[	
		SELECT  
		    C.DIAG_CODE,
		    IFNULL((
		        SELECT KOR_DIAG_NAME
		        FROM TBL_DISE_CODE 
		        WHERE DIAG_CODE = C.DIAG_CODE
		        LIMIT 1
		    ), '') AS DIAG_NAME,
		    
		    SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
		                                                         + IFNULL(B.VET_AMT,0))         AS totalAmt,
		    COUNT(*)                                                                            AS claimCount,
		    COUNT(DISTINCT B.PAT_ID)                                                            AS uniqPatients,
		
		    FLOOR(SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
		                                      + IFNULL(B.VET_AMT,0)) / COUNT(*))                AS amtPerClaim,
		    FLOOR(SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
		                                      + IFNULL(B.VET_AMT,0)) / COUNT(DISTINCT B.PAT_ID)) AS amtPerPatient,
		
		    ROUND(SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) + IFNULL(B.VET_AMT,0))  
		                                                       / MAX(ts.total_amt_all) * 100, 1) AS rateOfTotalAmt,
		
		    ROUND(COUNT(*) / MAX(ts.total_claims_all) * 100, 1) AS rateOfClaims
		
		FROM TBL_CHUNG_MST A
		JOIN TBL_MYOUNG_MST B 
		  ON A.CLAIM_NO = B.CLAIM_NO AND A.HOSP_CD = B.HOSP_CD
		LEFT JOIN TBL_DISEASE_MST C 
		  ON C.CLAIM_NO = B.CLAIM_NO 
		 AND C.HOSP_CD = B.HOSP_CD 
		 AND C.BILL_SEQ = B.BILL_SEQ 
		 AND C.DIAG_TYPE = '1'
		JOIN TOTAL_SUMMARY ts
		WHERE A.HOSP_CD = #{hospCd}
          AND A.DATE_YM BETWEEN #{startMonth} AND #{endMonth}
       ]]>
       <choose>
	    <when test='ipwe == "I"'>
	      <![CDATA[
	        AND A.TREAT_TYPE NOT IN ('2','4','9','H','6')
	      ]]>
	    </when>
	    <otherwise>
	      <![CDATA[
	        AND A.TREAT_TYPE IN ('2','4','9','H','6')
	      ]]>
	    </otherwise>
	  </choose>   
	  <![CDATA[       
		GROUP BY C.DIAG_CODE
		ORDER BY claimCount DESC
		LIMIT 30
	  ]]>		
 	</select>  
    <!-- 총진료비 의사별 건수당 진료비  -->
	<select id="tong05List" parameterType="TongDTO" resultType="TongDTO">
	<![CDATA[
		WITH BASE_DATA AS (
		    SELECT  
		        IFNULL(C.LICENSE_NO, '99') AS LICENSE_NO,  
		        SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
		                                                             + IFNULL(B.VET_AMT,0))       AS totalAmt,
		        COUNT(*)                                                                          AS claimCount
		    FROM TBL_CHUNG_MST A
			    JOIN TBL_MYOUNG_MST B 
			      ON A.CLAIM_NO = B.CLAIM_NO 
			     AND A.HOSP_CD = B.HOSP_CD
			    LEFT JOIN TBL_DISEASE_MST C 
			      ON C.CLAIM_NO = B.CLAIM_NO 
			     AND C.HOSP_CD  = B.HOSP_CD 
			     AND C.BILL_SEQ = B.BILL_SEQ 
			     AND C.DIAG_TYPE = '1'
			    WHERE A.HOSP_CD = #{hospCd}
			      AND A.DATE_YM BETWEEN #{startMonth} AND #{endMonth}
		]]>
		<choose>
		  <when test='ipwe == "I"'>
		    AND A.TREAT_TYPE NOT IN ('2','4','9','H','6')
		  </when>
		  <otherwise>
		    AND A.TREAT_TYPE IN ('2','4','9','H','6')
		  </otherwise>
		</choose>
		<![CDATA[
		    GROUP BY IFNULL(C.LICENSE_NO, '99')
		),
		TOTAL_SUM AS (
		    SELECT SUM(totalAmt) AS totalAmt FROM BASE_DATA
		),
		BASE_WITH_TOTAL AS (
		    SELECT * FROM BASE_DATA
		    UNION ALL
		    SELECT '00' AS LICENSE_NO, SUM(totalAmt), SUM(claimCount) FROM BASE_DATA
		)
		SELECT 
		    CASE WHEN  A.LICENSE_NO = '00' THEN '' ELSE A.LICENSE_NO END  AS LICENSE_NO,  
		    COALESCE(D.SUB_CODE_NM, '전체') AS LICENSE_NAME,
		    A.totalAmt,
		    A.claimCount,
		    FLOOR(A.totalAmt / A.claimCount) AS avgAmt,
		    ROUND((A.totalAmt / T.totalAmt) * 100, 1) AS percentOfTotal 
		FROM BASE_WITH_TOTAL A
		JOIN TOTAL_SUM T ON 1=1
		LEFT JOIN TBL_CODE_DTL D 
		  ON D.CODE_GB = 'Z' 
		 AND D.CODE_CD = 'LICENSE_NO'
		 AND D.ACTION_YN = 'Y'
		 AND D.SUB_CODE = A.LICENSE_NO
		ORDER BY percentOfTotal DESC, A.LICENSE_NO
	]]>

	</select>
    <!-- 유형별 정수액대비 건수비율   -->
	<select id="tong06List" parameterType="TongDTO" resultType="TongDTO">
	<![CDATA[
		WITH BASE_DATA AS (
		    SELECT  
		        IFNULL(A.CFORM_NO, '99') AS CFORM_NO,  
		        SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
		                                                             + IFNULL(B.VET_AMT,0))      AS totalAmt,
		        COUNT(*)                                                                         AS claimCount
		    FROM TBL_CHUNG_MST A
			    JOIN TBL_MYOUNG_MST B 
			      ON A.CLAIM_NO = B.CLAIM_NO 
			     AND A.HOSP_CD = B.HOSP_CD
			    WHERE A.HOSP_CD = #{hospCd}
			      AND A.DATE_YM BETWEEN #{startMonth} AND #{endMonth}
		]]>
		<choose>
		  <when test='ipwe == "I"'>
		    AND A.TREAT_TYPE NOT IN ('2','4','9','H','6')
		  </when>
		  <otherwise>
		    AND A.TREAT_TYPE IN ('2','4','9','H','6')
		  </otherwise>
		</choose>
		<![CDATA[
		    GROUP BY IFNULL(A.CFORM_NO, '99')
		),
		TOTAL_SUM AS (
		    SELECT SUM(totalAmt) AS totalAmt FROM BASE_DATA
		),
		BASE_WITH_TOTAL AS (
		    SELECT * FROM BASE_DATA
		    UNION ALL
		    SELECT '00' AS CFORM_NO, SUM(totalAmt), SUM(claimCount) FROM BASE_DATA
		)
		SELECT 
		    CASE WHEN  A.CFORM_NO = '00' THEN '' ELSE A.CFORM_NO END  AS CFORM_NO,  
		    COALESCE(D.SUB_CODE_NM, '전체') AS CFORM_NAME,
		    A.totalAmt,
		    A.claimCount,
		    FLOOR(A.totalAmt / A.claimCount) AS avgAmt,
		    ROUND((A.totalAmt / T.totalAmt) * 100, 1) AS percentOfTotal 
		FROM BASE_WITH_TOTAL A
		JOIN TOTAL_SUM T ON 1=1
		LEFT JOIN TBL_CODE_DTL D 
		  ON D.CODE_GB = 'Z' 
		 AND D.CODE_CD = 'CFORM_NO'  
		 AND D.ACTION_YN = 'Y'
		 AND D.SUB_CODE = A.CFORM_NO  
		ORDER BY percentOfTotal DESC, A.CFORM_NO
	]]>
	</select> 	             	   	             	 	             	   	                                	   	                  
    <!-- 총진료비 의사별 전월  건수당 진료비  -->
	<select id="tong07List" parameterType="TongDTO" resultType="TongDTO">
	<![CDATA[
		WITH
		PARAMS AS (
		    SELECT 
		        #{endMonth} AS TARGETYM,
		         DATE_FORMAT(DATE_SUB(STR_TO_DATE(CONCAT(#{endMonth}, '01'), '%Y%m%d'),INTERVAL 1 MONTH),'%Y%m') AS PREVYM
		),
		BASE_DATA AS (
		    SELECT  
		        IFNULL(C.LICENSE_NO, '99') AS LICENSE_NO,  
		        A.DATE_YM,
		        SUM(IFNULL(B.CLAIM_AMT,0) + IFNULL(B.DISABLED_AMT,0) + IFNULL(B.NON100_CLAIM,0) 
		                                                             + IFNULL(B.VET_AMT,0)) AS TOTALAMT,
		        COUNT(*)                                                                    AS CLAIMCOUNT
		    FROM TBL_CHUNG_MST A
			    JOIN TBL_MYOUNG_MST B 
			      ON A.CLAIM_NO = B.CLAIM_NO 
			     AND A.HOSP_CD  = B.HOSP_CD
			    LEFT JOIN TBL_DISEASE_MST C 
			      ON C.CLAIM_NO  = B.CLAIM_NO 
			     AND C.HOSP_CD   = B.HOSP_CD 
			     AND C.BILL_SEQ  = B.BILL_SEQ 
			     AND C.DIAG_TYPE = '1'
			    WHERE A.HOSP_CD  = #{hospCd}
			      AND A.DATE_YM IN (
			        #{endMonth}, 
			        DATE_FORMAT(DATE_SUB(STR_TO_DATE(CONCAT(#{endMonth}, '01'), '%Y%m%d'),INTERVAL 1 MONTH),'%Y%m')
			      )
		]]>
        <choose>
		  <when test='ipwe == "I"'>
		    AND A.TREAT_TYPE NOT IN ('2','4','9','H','6')
		  </when>
		  <otherwise>
		    AND A.TREAT_TYPE IN ('2','4','9','H','6')
		  </otherwise>
		</choose>
		<![CDATA[
		    GROUP BY IFNULL(C.LICENSE_NO, '99'), A.DATE_YM
		),
		PIVOTED AS (
		    SELECT
		        LICENSE_NO,
		        MAX(CASE WHEN DATE_YM = DATE_FORMAT(DATE_SUB(STR_TO_DATE(CONCAT(#{endMonth}, '01'), '%Y%m%d')
		                                                                ,INTERVAL 1 MONTH),'%Y%m') THEN TOTALAMT END)   AS AMT_PREV,
		        MAX(CASE WHEN DATE_YM = #{endMonth} THEN TOTALAMT END)                                                  AS AMT_CURR,
		        MAX(CASE WHEN DATE_YM = DATE_FORMAT(DATE_SUB(STR_TO_DATE(CONCAT(#{endMonth}, '01'), '%Y%m%d')
		                                                                ,INTERVAL 1 MONTH),'%Y%m') THEN CLAIMCOUNT END) AS CNT_PREV,
		        MAX(CASE WHEN DATE_YM = #{endMonth} THEN CLAIMCOUNT END)                                                AS CNT_CURR
		    FROM BASE_DATA
		    GROUP BY LICENSE_NO
		),
		WITH_TOTAL AS (
		    SELECT * FROM PIVOTED
		    UNION ALL
		    SELECT
		        '00' AS LICENSE_NO,
		        SUM(AMT_PREV),
		        SUM(AMT_CURR),
		        SUM(CNT_PREV),
		        SUM(CNT_CURR)
		    FROM PIVOTED
		)
		SELECT 
		    CASE 
		        WHEN P.LICENSE_NO = '00' THEN '' 
		        ELSE P.LICENSE_NO END AS LICENSE_NO  ,
		    CASE 
		        WHEN P.LICENSE_NO = '00' THEN '전체'
		        ELSE COALESCE(D.SUB_CODE_NM, '기타')
		    END                                                AS LICENSE_NAME,
		
		    COALESCE(AMT_PREV, 0)                              AS AMT_PREV,
		    COALESCE(AMT_CURR, 0)                              AS AMT_CURR,
		    
		    COALESCE(CNT_PREV, 0)                              AS CNT_PREV,
		    COALESCE(CNT_CURR, 0)                              AS CNT_CURR,
		    
		    FLOOR(COALESCE(AMT_PREV, 0) / NULLIF(CNT_PREV, 0)) AS AVG_PREV,
		    FLOOR(COALESCE(AMT_CURR, 0) / NULLIF(CNT_CURR, 0)) AS AVG_CURR,
		    
		    (COALESCE(AMT_CURR, 0) - COALESCE(AMT_PREV, 0))    AS AMT_DIFF,
		    
		    CONCAT(
		        ROUND(
		            CASE 
		                WHEN COALESCE(AMT_PREV, 0) = 0 THEN NULL
		                ELSE (COALESCE(AMT_CURR, 0) / AMT_PREV) * 100
		            END, 1
		        ), '%'
		    ) AS PERCENT_VS_PREV
		
		FROM WITH_TOTAL P
			LEFT JOIN TBL_CODE_DTL D 
			  ON D.CODE_GB   = 'Z' 
			 AND D.CODE_CD   = 'LICENSE_NO'
			 AND D.ACTION_YN = 'Y'
			 AND D.SUB_CODE = P.LICENSE_NO
			ORDER BY P.LICENSE_NO
	]]>

	</select>
</mapper>